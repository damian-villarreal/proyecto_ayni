@model ayni.Models.Publicacion

@{
    ViewBag.Title = "Modificar";
    Layout = "~/Views/Shared/_EstandarLayout.cshtml";
}


<div class="card col-6 shadow-sm">


    <div class="card-body">
        <h5 class="card-title white-text">

            <strong>Modificar publicacion</strong>
        </h5>

        @using (Html.BeginForm())
        {
            @*@Html.AntiForgeryToken()*@



            <input value="@Model.idPublicacion" hidden />


            <div class="form-group">


                <img class="card-img-top" style="object-fit:cover; height: 300px" src="@Url.Content(Model.Imagen)" />

                <div class="form-group">
                    <label class="col-form-label" for="exampleFormControlFile1">Cambiar imagen</label>
                    <input type="file" class="form-control-file" id="exampleFormControlFile1" name="file">
                </div>


                <div class="form-group">
                    <label class="col-form-label">Categoría</label>
                    @Html.DropDownListFor(p => p.idCategoria, new SelectList(ViewData["Categoria"] as List<ayni.Models.Categoria>, "IdCategoria", "Descripcion", Model.Categoria), new { @class = "form-control" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Titulo)
                    @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Descripcion)
                    @Html.TextAreaFor(model => model.Descripcion, new { @class = "for-control  col-sm-12", rows = "10" })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Valor)
                    @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control", min = 0 } })
                    @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <input type="submit" value="Guardar" class="btn btn-outline-primary" />
                </div>
                <div>
                    @Html.Raw(TempData["MensajeModif"])
                </div>
            </div>

        }
        </div>
    </div>



